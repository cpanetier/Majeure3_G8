# namespace
apiVersion: v1
kind: Namespace
metadata:
  name: appscore

---
# applicant.api Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: applicants-api
  namespace: appscore
  labels:
    app: applicants-api
    affinity: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: applicants-api
  template:
    metadata:
      labels:
        app: applicants-api
    spec:
      containers:
      - name: applicants-api
        image: cpanetier/applicants.api:latest
        ports:
        - containerPort: 80
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 40
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 40
          periodSeconds: 20
        env:
        - name: ConnectionString
          value: "Server=sql-data;User=sa;Password=Pass@word;Database=dotnetgigs.applicants;"
        - name: HostRabbitmq
          value: "rabbitmq-service"
        resources:
          requests:
            memory: 200Mi
            cpu: 3m
          limits:
            memory: 10000Mi
            cpu: 60m
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100 
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: affinity
                  operator: In
                  values:
                  - sql
              topologyKey: kubernetes.io/hostname
      restartPolicy: Always

---
# applicant.api Service
apiVersion: v1
kind: Service
metadata:
  name: applicants-api
  namespace: appscore
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
  selector:
    app: applicants-api













---
# identity.api Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: identity-api
  namespace: appscore
  labels:
    app: identity-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: identity-api
  template:
    metadata:
      labels:
        app: identity-api
    spec:
      containers:
      - name: identity-api
        image: cpanetier/identity.api:latest
        ports:
          - containerPort: 80
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 40
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 40
          periodSeconds: 20
        env:
          - name: HostRabbitmq
            value: "rabbitmq-service"
          - name: RedisHost
            value: user-data-service:6379
        resources:
          requests:
            memory: 200Mi
            cpu: 3m
          limits:
            memory: 10000Mi
            cpu: 60m
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100 
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: affinity
                  operator: In
                  values:
                  - user
              topologyKey: kubernetes.io/hostname
      restartPolicy: Always

---
#identity.api Service
apiVersion: v1
kind: Service
metadata:
  name: identity-api-service
  namespace: appscore
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
  selector:
    app: identity-api











---
#jobs.api Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jobs-api
  namespace: appscore
  labels:
    app: jobs-api
    affinity: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jobs-api
  template:
    metadata:
      labels:
        app: jobs-api
    spec:
      containers:
      - name: jobs-api
        image: cpanetier/jobs.api:latest
        ports:
          - containerPort: 80
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 40
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 40
          periodSeconds: 20
        env:
          - name: ConnectionString
            value: Server=sql-data;User=sa;Password=Pass@word;Database=dotnetgigs.jobs;
          - name: HostRabbitmq
            value: "rabbitmq-service"
        resources:
          requests:
            memory: 200Mi
            cpu: 3m
          limits:
            memory: 10000Mi
            cpu: 60m
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100 
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: affinity
                  operator: In
                  values:
                  - sql
              topologyKey: kubernetes.io/hostname
      restartPolicy: Always

---
#jobs.api Service
apiVersion: v1
kind: Service
metadata:
  name: jobs-api-service
  namespace: appscore
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
  selector:
    app: jobs-api











---
# rabbitMQ Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: appscore
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        ports:
          - name: port15672
            containerPort: 15672
          - name: port5672
            containerPort: 5672
        readinessProbe:
          tcpSocket:
            port: 15672
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 15672
          initialDelaySeconds: 30
          periodSeconds: 20
        resources:
          requests:
            memory: 300Mi
            cpu: 4m
          limits:
            memory: 800Mi
            cpu: 8m
      restartPolicy: Always

---
#rabbitMQ Service
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  namespace: appscore
spec:
  ports:
    - name: port15672
      protocol: TCP
      port: 15672
      targetPort: 15672
    - name: port5672
      protocol: TCP
      port: 5672
      targetPort: 5672
  type: ClusterIP
  selector:
    app: rabbitmq











---
#sql.data Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sql-data
  namespace: appscore
  labels:
    app: sql-data
    affinity: sql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sql-data
  template:
    metadata:
      labels:
        app: sql-data
    spec:
      containers:
      - name: mssql-linux
        image: cpanetier/mssql-linux:latest
        ports:
          - containerPort: 1433
        readinessProbe:
          tcpSocket:
            port: 1433
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 1433
          initialDelaySeconds: 10
          periodSeconds: 20
        resources:
          requests:
            memory: 1500Mi
            cpu: 170m
          limits:
            memory: 25000Mi
            cpu: 2500m
      restartPolicy: Always

---
#sql.data Service
apiVersion: v1
kind: Service
metadata:
  name: sql-data
  namespace: appscore
spec:
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
  type: ClusterIP
  selector:
    app: sql-data











---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-data-deployment
  namespace: appscore
  labels:
    app: user-data
    affinity: user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-data-pod
  template:
    metadata:
      labels:
        app: user-data-pod
    spec:
      containers:
      - name: user-data-cont
        image: redis
        ports:
        - containerPort: 6379
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 10
          periodSeconds: 20
        resources:
          requests:
            memory: 100Mi
            cpu: 4m
          limits:
            memory: 8000Mi
            cpu: 80m
      restartPolicy: Always
 
---
apiVersion: v1
kind: Service
metadata:
  name: user-data-service
  namespace: appscore
spec:
  selector:
    app: user-data-pod
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP











---
#web Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webmvc
  namespace: appscore
  labels:
    app: webmvc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webmvc
  template:
    metadata:
      labels:
        app: webmvc
    spec:
      containers:
      - name: web
        image: cpanetier/web:latest
        ports:
          - containerPort: 80
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 20
        resources:
          requests:
            memory: 500Mi
            cpu: 4m
          limits:
            memory: 10000Mi
            cpu: 60m
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100 
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: affinity
                  operator: In
                  values:
                  - web
              topologyKey: kubernetes.io/hostname
      restartPolicy: Always

---
#web Service
apiVersion: v1
kind: Service
metadata:
  name: service-web
  namespace: appscore
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: webmvc
  type: ClusterIP